digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_iam_policy.invalidate_cloud_front_policy" [label = "aws_iam_policy.invalidate_cloud_front_policy", shape = "box"]
		"[root] aws_iam_role.invalidate_cloud_front_role" [label = "aws_iam_role.invalidate_cloud_front_role", shape = "box"]
		"[root] aws_iam_role_policy_attachment.invalidate_cloud_front_attachment" [label = "aws_iam_role_policy_attachment.invalidate_cloud_front_attachment", shape = "box"]
		"[root] aws_lambda_function.invalidate_cloud_front_lambda" [label = "aws_lambda_function.invalidate_cloud_front_lambda"]
		"[root] aws_lambda_permission.allow_s3_event_notifications" [label = "aws_lambda_permission.allow_s3_event_notifications", shape = "box"]
		"[root] aws_s3_bucket_notification.bucket_notification" [label = "aws_s3_bucket_notification.bucket_notification", shape = "box"]
		"[root] data.archive_file.invalidate_cloud_front_lambda_zip" [label = "data.archive_file.invalidate_cloud_front_lambda_zip", shape = "box"]

		"[root] aws_iam_role_policy_attachment.invalidate_cloud_front_attachment" -> "[root] aws_iam_policy.invalidate_cloud_front_policy"
		"[root] aws_iam_role_policy_attachment.invalidate_cloud_front_attachment" -> "[root] aws_iam_role.invalidate_cloud_front_role"
		"[root] aws_lambda_function.invalidate_cloud_front_lambda" -> "[root] aws_iam_role.invalidate_cloud_front_role"
		"[root] aws_lambda_function.invalidate_cloud_front_lambda" -> "[root] data.archive_file.invalidate_cloud_front_lambda_zip"
		"[root] aws_lambda_permission.allow_s3_event_notifications" -> "[root] aws_lambda_function.invalidate_cloud_front_lambda"
		"[root] aws_s3_bucket_notification.bucket_notification" -> "[root] aws_lambda_function.invalidate_cloud_front_lambda"
	}
}

